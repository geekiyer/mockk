public abstract interface class io/mockk/proxy/Cancelable {
	public abstract fun cancel ()V
	public abstract fun get ()Ljava/lang/Object;
}

public final class io/mockk/proxy/MockKAgentException : java/lang/RuntimeException {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
}

public abstract interface class io/mockk/proxy/MockKAgentFactory {
	public abstract fun getConstructorProxyMaker ()Lio/mockk/proxy/MockKConstructorProxyMaker;
	public abstract fun getInstantiator ()Lio/mockk/proxy/MockKInstantiatior;
	public abstract fun getProxyMaker ()Lio/mockk/proxy/MockKProxyMaker;
	public abstract fun getStaticProxyMaker ()Lio/mockk/proxy/MockKStaticProxyMaker;
	public abstract fun init (Lio/mockk/proxy/MockKAgentLogFactory;)V
}

public abstract interface class io/mockk/proxy/MockKAgentLogFactory {
	public static final field Companion Lio/mockk/proxy/MockKAgentLogFactory$Companion;
	public abstract fun logger (Ljava/lang/Class;)Lio/mockk/proxy/MockKAgentLogger;
}

public final class io/mockk/proxy/MockKAgentLogFactory$Companion {
	public final fun getSimpleConsoleLogFactory ()Lio/mockk/proxy/MockKAgentLogFactory;
}

public abstract interface class io/mockk/proxy/MockKAgentLogger {
	public abstract fun debug (Ljava/lang/String;)V
	public abstract fun trace (Ljava/lang/String;)V
	public abstract fun trace (Ljava/lang/Throwable;Ljava/lang/String;)V
	public abstract fun warn (Ljava/lang/String;)V
	public abstract fun warn (Ljava/lang/Throwable;Ljava/lang/String;)V
}

public abstract interface class io/mockk/proxy/MockKConstructorProxyMaker {
	public abstract fun constructorProxy (Ljava/lang/Class;Lio/mockk/proxy/MockKInvocationHandler;)Lio/mockk/proxy/Cancelable;
}

public abstract interface class io/mockk/proxy/MockKInstantiatior {
	public abstract fun instance (Ljava/lang/Class;)Ljava/lang/Object;
}

public abstract interface class io/mockk/proxy/MockKInvocationHandler {
	public abstract fun invocation (Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/util/concurrent/Callable;[Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class io/mockk/proxy/MockKProxyMaker {
	public abstract fun proxy (Ljava/lang/Class;[Ljava/lang/Class;Lio/mockk/proxy/MockKInvocationHandler;ZLjava/lang/Object;)Lio/mockk/proxy/Cancelable;
}

public abstract interface class io/mockk/proxy/MockKStaticProxyMaker {
	public abstract fun staticProxy (Ljava/lang/Class;Lio/mockk/proxy/MockKInvocationHandler;)Lio/mockk/proxy/Cancelable;
}

public class io/mockk/proxy/common/CancelableResult : io/mockk/proxy/Cancelable {
	public fun <init> ()V
	public fun <init> (Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)V
	public synthetic fun <init> (Ljava/lang/Object;Lkotlin/jvm/functions/Function0;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun alsoOnCancel (Lkotlin/jvm/functions/Function0;)Lio/mockk/proxy/common/CancelableResult;
	public fun cancel ()V
	public fun get ()Ljava/lang/Object;
	public final fun getFired ()Ljava/util/concurrent/atomic/AtomicBoolean;
	public final fun withValue (Ljava/lang/Object;)Lio/mockk/proxy/common/CancelableResult;
}

public final class io/mockk/proxy/common/ProxyInvocationHandler : java/lang/reflect/InvocationHandler {
	public static final field Companion Lio/mockk/proxy/common/ProxyInvocationHandler$Companion;
	public fun <init> (Lio/mockk/proxy/MockKInvocationHandler;)V
	public fun invoke (Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
}

public final class io/mockk/proxy/common/ProxyInvocationHandler$Companion {
}

public final class io/mockk/proxy/common/ProxyMaker : io/mockk/proxy/MockKProxyMaker {
	public static final field Companion Lio/mockk/proxy/common/ProxyMaker$Companion;
	public fun <init> (Lio/mockk/proxy/MockKAgentLogger;Lio/mockk/proxy/common/transformation/InlineInstrumentation;Lio/mockk/proxy/common/transformation/SubclassInstrumentation;Lio/mockk/proxy/MockKInstantiatior;Ljava/util/Map;)V
	public fun proxy (Ljava/lang/Class;[Ljava/lang/Class;Lio/mockk/proxy/MockKInvocationHandler;ZLjava/lang/Object;)Lio/mockk/proxy/Cancelable;
}

public final class io/mockk/proxy/common/ProxyMaker$Companion {
}

public final class io/mockk/proxy/common/transformation/ClassTransformationSpec {
	public fun <init> (Ljava/lang/Class;III)V
	public synthetic fun <init> (Ljava/lang/Class;IIIILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/Class;
	public final fun component2 ()I
	public final fun component3 ()I
	public final fun component4 ()I
	public final fun copy (Ljava/lang/Class;III)Lio/mockk/proxy/common/transformation/ClassTransformationSpec;
	public static synthetic fun copy$default (Lio/mockk/proxy/common/transformation/ClassTransformationSpec;Ljava/lang/Class;IIIILjava/lang/Object;)Lio/mockk/proxy/common/transformation/ClassTransformationSpec;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCls ()Ljava/lang/Class;
	public final fun getConstructorIntercept ()I
	public final fun getShouldDoConstructorIntercept ()Z
	public final fun getShouldDoSimpleIntercept ()Z
	public final fun getShouldDoSomething ()Z
	public final fun getShouldDoStaticIntercept ()Z
	public final fun getSimpleIntercept ()I
	public final fun getStaticIntercept ()I
	public fun hashCode ()I
	public final fun sameTransforms (Lio/mockk/proxy/common/transformation/ClassTransformationSpec;)Z
	public fun toString ()Ljava/lang/String;
}

public final class io/mockk/proxy/common/transformation/ClassTransformationSpecMap {
	public fun <init> ()V
	public final fun applyTransformation (Lio/mockk/proxy/common/transformation/TransformationRequest;Lkotlin/jvm/functions/Function1;)V
	public final fun get (Ljava/lang/Class;)Lio/mockk/proxy/common/transformation/ClassTransformationSpec;
	public final fun shouldTransform (Ljava/lang/Class;)Z
	public final fun transformationMap (Lio/mockk/proxy/common/transformation/TransformationRequest;)Ljava/util/Map;
}

public abstract interface class io/mockk/proxy/common/transformation/InlineInstrumentation {
	public abstract fun execute (Lio/mockk/proxy/common/transformation/TransformationRequest;)Lkotlin/jvm/functions/Function0;
}

public abstract class io/mockk/proxy/common/transformation/RetransformInlineInstrumentation : io/mockk/proxy/common/transformation/InlineInstrumentation {
	public fun <init> (Lio/mockk/proxy/MockKAgentLogger;Lio/mockk/proxy/common/transformation/ClassTransformationSpecMap;)V
	public fun execute (Lio/mockk/proxy/common/transformation/TransformationRequest;)Lkotlin/jvm/functions/Function0;
	protected final fun getLog ()Lio/mockk/proxy/MockKAgentLogger;
	protected abstract fun retransform (Ljava/util/Collection;)V
}

public abstract interface class io/mockk/proxy/common/transformation/SubclassInstrumentation {
	public abstract fun setProxyHandler (Ljava/lang/Object;Lio/mockk/proxy/MockKInvocationHandler;)V
	public abstract fun subclass (Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/Class;
}

public final class io/mockk/proxy/common/transformation/TransformationRequest {
	public fun <init> (Ljava/util/Set;Lio/mockk/proxy/common/transformation/TransformationType;Z)V
	public synthetic fun <init> (Ljava/util/Set;Lio/mockk/proxy/common/transformation/TransformationType;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/Set;
	public final fun component2 ()Lio/mockk/proxy/common/transformation/TransformationType;
	public final fun component3 ()Z
	public final fun copy (Ljava/util/Set;Lio/mockk/proxy/common/transformation/TransformationType;Z)Lio/mockk/proxy/common/transformation/TransformationRequest;
	public static synthetic fun copy$default (Lio/mockk/proxy/common/transformation/TransformationRequest;Ljava/util/Set;Lio/mockk/proxy/common/transformation/TransformationType;ZILjava/lang/Object;)Lio/mockk/proxy/common/transformation/TransformationRequest;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getClasses ()Ljava/util/Set;
	public final fun getType ()Lio/mockk/proxy/common/transformation/TransformationType;
	public final fun getUntransform ()Z
	public fun hashCode ()I
	public final fun reverse ()Lio/mockk/proxy/common/transformation/TransformationRequest;
	public fun toString ()Ljava/lang/String;
}

public final class io/mockk/proxy/common/transformation/TransformationType : java/lang/Enum {
	public static final field CONSTRUCTOR Lio/mockk/proxy/common/transformation/TransformationType;
	public static final field SIMPLE Lio/mockk/proxy/common/transformation/TransformationType;
	public static final field STATIC Lio/mockk/proxy/common/transformation/TransformationType;
	public static fun valueOf (Ljava/lang/String;)Lio/mockk/proxy/common/transformation/TransformationType;
	public static fun values ()[Lio/mockk/proxy/common/transformation/TransformationType;
}

